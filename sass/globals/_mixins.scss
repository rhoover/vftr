%main {
    @include container;
    // @include susy-grid-background;
    // min-height: 100%;
    @include at-breakpoint($break-to-medium) {
        @include container;
        // @include susy-grid-background;
    }
    @include at-breakpoint($break-to-medium-large) {
        @include container;
        // @include susy-grid-background;
    }
    @include at-breakpoint($break-to-large) {
        @include container;
        // @include susy-grid-background;
    }
}

%responsive-trigger {
    &:after {
        content: "phone";
        display: none;
        @include at-breakpoint($break-to-medium) {
            content: "tablet";
        }
        @include at-breakpoint($break-to-medium-large) {
            content: "small-desktop"
        }
        @include at-breakpoint($break-to-large) {
            content: "large-desktop"
        }
    }
}
// Courtesy: http://jaydenseric.com/blog/fun-with-sass-and-font-icons
$icons: (
    'menu' '\e600',
    'back' '\e601',
    'facebook' '\e602',
    'home' '\e603',
    'results' '\e604',
    'videos' '\e605',
    'people' '\e606',
    'maps' '\e607',
    'photos' '\e608',
    'businesses' '\e609',
    'search' '\e610',
    'arrowdown' '\e611',
    'mail' '\e612',
    'about' '\e613',
    'arrowup' '\e614',
    'news' '\e60a',
    'form' '\e60b',
    'phone' '\e60c',
    'link' '\e60d',
    'shopping' '\e60e',
    'twitter' '\e60f'
);
@function match($haystack, $needle) {
    @each $item in $haystack {
        $index: index($item, $needle);
        @if $index {
            $return: if($index == 1, 2, $index);
            @return nth($item, $return);
        }
    }
    @return false;
}
@mixin icon($position: 'before', $styles: true, $icon: false) {
    // Either a :before or :after pseudo-element, defaulting to :before
    &:#{$position} {
        @if $icon {
            // Icon has been specified
            content: match($icons, $icon);
        }
        @if $styles {
            // Supportive icon styles have been specified
            color: desaturate($yellow, 25%);
            font: {
                style: normal;
                variant: normal;
                weight: normal;
                family: $vftr;
            }
            // @include adjust-font-size-to(14px);
            padding-right: $grid-padding/2;
            // @include adjust-font-size-to(25px);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            text-transform: none;
            speak: none;
        }
        // Include any extra rules supplied for the pseudo-element
        @content;
    }
}

%small-menu-icon {
    &:before {
        @include adjust-font-size-to(16px);
        padding-right: $grid-padding;
        @include at-breakpoint($break-to-medium-large) {
            display: none;
        }
    }
}

%home-item-design {
    color: $black;
    @include adjust-font-size-to(25px);
    text-align: center;
    border: .1em solid rgba($green-mute, .5);
    border-radius: .25em;
}

%home-item-layout {
    @include span-columns(12,12);
    margin-right: 0;
    margin-bottom: rhythm(1, 16px);
    // padding: rhythm(.25, 16px) 0;
    padding: $grid-padding/2;
    min-height: rhythm(5, 16px);
    @include at-breakpoint($break-to-medium) {
        @include span-columns(8, 16);
        @include nth-omega(2n);
    }
    @include at-breakpoint($break-to-medium-large) {
        @include span-columns(5, 20);
        @include remove-nth-omega(2n); //remove nth-omega from break-to-medium
        @include nth-omega(4n);
    }
    @include at-breakpoint($break-to-large) {
        @include span-columns(6, 24);
        @include remove-nth-omega(2n); //remove nth-omega from break-to-medium
        @include nth-omega(4n);
    }
}

%inner-content-design {
    color: $black-lite;
    background: rgba($white, .9);
    border: .1em solid rgba($green-mute, .5);
    border-radius: .25em;
}

@mixin input-placeholder-focus($focus-color) {
  &.placeholder {
    color: $focus-color;
    }
    &::-moz-placeholder {
      opacity: 0;
      color: $focus-color;
  }
    &::-webkit-input-placeholder {
      color: $focus-color;
  }
}